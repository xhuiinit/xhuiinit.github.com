<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>拉风二大爷</title>
    <description></description>
    <link>http://xhuiinit.github.io//</link>
    <atom:link href="http://xhuiinit.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 05 May 2016 16:31:16 +0800</pubDate>
    <lastBuildDate>Thu, 05 May 2016 16:31:16 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>intellij idea15 + maven使用</title>
        <description>* TOC
{:toc}

Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。

## 简单使用

工欲善其事，必先利其器。笔者用的是64位windows系统，下载安装相应的软件：

### 安装JDK
这里笔者用的是jdk1.7,下载地址：&lt;a href=&quot;http://pan.baidu.com/s/1pLd6zz1&quot;&gt;http://pan.baidu.com/s/1pLd6zz1&lt;/a&gt;

### 安装maven
下载maven，&lt;a href=&quot;http://pan.baidu.com/s/1hsNfUCG&quot;&gt;http://pan.baidu.com/s/1hsNfUCG&lt;/a&gt;，解压安装

设置环境变量，`MAVEN_HOME`,如：D:\WORKING\apache-maven-3.2.5，设置到`PATH`中

校验是否安装成功

```ruby
C:\Users\Administrator&gt;mvn -v
Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-15T01:29:2
3+08:00)
Maven home: D:\WORKING\apache-maven-3.2.5\bin\..
Java version: 1.7.0_55, vendor: Oracle Corporation
Java home: D:\WORKING\JAVA\jdk1.7\jre
Default locale: zh_CN, platform encoding: GBK
OS name: &quot;windows 8.1&quot;, version: &quot;6.3&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;
```

### 安装intellij idea
下载intellij idea15,下载地址 &lt;a href=&quot;http://pan.baidu.com/s/1hsNfUCG&quot;&gt;http://pan.baidu.com/s/1dFa2wyX&lt;/a&gt;，解压安装，注册时选择“License server”输入“http://15.idea.lanyus.com/”点击“OK”即可快速激活

### 一个简单的maven实例
打开刚刚安装的intellij idea，新建Module，这里我们以创建一个`web`项目为例
&lt;img src=&quot;/images/maven/A017E6A0997FF1C210091D7CCD9030AE.png&quot; alt=&quot;New Module&quot;/&gt;
选择JDK版本，选中`maven-archetype-webapp`，点**next**；
&lt;img src=&quot;/images/maven/53A2F4034A083DE8D4E5622249CD823C.png&quot; alt=&quot;New Module&quot;/&gt;
填写`GroupId`和`ArtifactId`，版本默认1.0-SNAPSHOT，点击**next**；
&lt;img src=&quot;/images/maven/2385850B1D9FD2682DC4E9E888AC02F7.png&quot; alt=&quot;New Module&quot;/&gt;
选择`Maven home`路径，选择`settings`和`repository`，点击**next**；
&lt;img src=&quot;/images/maven/D71C166A06A6A544BF709B5E0D61C1EB.png&quot; alt=&quot;New Module&quot;/&gt;
点击**finsh**，这时就生成了一个`maven web`工程。
&lt;img src=&quot;/images/maven/393C637B36FB93912AFB6214AFCDAFA9.png&quot; alt=&quot;New Module&quot;/&gt;
然后可在该界面`clean`，`install`等

## 管理本地仓库及远端仓库

### 本地仓库
在settings中加入`&lt;localRepository&gt;`
`C:\Users\Administrator\.m2\repository``&lt;/localRepository&gt;`，既本地仓库

### 远端仓库
在mirrors节点下加入

```ruby
&lt;mirror&gt;
  &lt;id&gt;nexus&lt;/id&gt;
  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
  &lt;name&gt;central Repo&lt;/name&gt;
  &lt;url&gt;http://domain:port/nexus/content/groups/public/&lt;/url&gt;
&lt;/mirror&gt;
```
`&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;`表示只为central仓库做镜像

如果想为所有的仓库做镜像那么可以改为`&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;`

`&lt;url&gt;`为具体的远端仓库地址，笔者使用的Nexus架设私服。

### 中央远端仓库
当我们创建一个简单的Maven项目后(只需要在pom.xml配置好依赖)，
运行mvn clean install就可以把项目构建好，不需要我们手工下载任何jar，
这全靠中央仓库的存在，它会自动从仓库下载。
这个仓库的定义是在`${M2_HOME}/lib/maven-2.0.10-uber.jar` 里面。
你可以在里面找到`\org\apache\maven\project\pom-4.0.0.xml` 这个文件，
在这个文件里面定义了默认中央仓库的地址：

```ruby
&lt;repositories&gt;        
  &lt;repository&gt;        
    &lt;id&gt; central&lt;/id&gt;        
    &lt;name&gt; Maven Repository Switchboard&lt;/name&gt;        
    &lt;layout&gt; default&lt;/layout&gt;        
    &lt;url&gt; http://repo1.maven.org/maven2&lt;/url&gt;        
    &lt;snapshots&gt;        
      &lt;enabled&gt; false&lt;/enabled&gt;        
    &lt;/snapshots&gt;        
  &lt;/repository&gt;        
&lt;/repositories&gt;
```
这里推荐一个很好的仓库，&lt;a href=&quot;&gt;http://mvnrepository.com/&quot;&gt;http://mvnrepository.com/&lt;/a&gt; ，相信地球人都知道这个。

## maven配置详解
先来说说settings.xml，settings.xml对于maven来说相当于全局性的配置，用于所有的项目。在maven中存在两个settings.xml，
一个位于maven的安装目录conf下面，作为全局性配置。
对于团队设置，保持一致的定义是关键，所以maven/conf下面的settings.xml就作为团队共同的配置文件。
保证所有的团队成员都拥有相同的配置。当然对于每个成员，都需要特殊的自定义设置，如用户信息，所以另外一个settings.xml就作为本地配置。
默认的位置为：${user.dir}/.m2/settings.xml目录中（${user.dir} 指windows 中的用户目录）。
settings.xml基本结构如下：

```ruby
&lt;settings xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
          xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 
                               http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;
  &lt;localRepository/&gt;
  &lt;interactiveMode/&gt;
  &lt;usePluginRegistry/&gt;
  &lt;offline/&gt;
  &lt;pluginGroups/&gt;
  &lt;servers/&gt;
  &lt;mirrors/&gt;
  &lt;proxies/&gt;
  &lt;profiles/&gt;
  &lt;activeProfiles/&gt;
&lt;/settings&gt;
```
简单介绍一下几个主要的配置因素：

* localRepository：表示本地库的保存位置，也就是maven2主要的jar保存位置，默认在${user.dir}/.m2/repository，如果需要另外设置，就换成其他的路径。

* offline：如果不想每次编译，都去查找远程中心库，那就设置为true。当然前提是你已经下载了必须的依赖包。

* servers：在POM中的 distributionManagement元素定义了开发库。然而，特定的username和pwd不能使用于pom.xml，所以通过此配置来保存server信息

* Mirrors：表示镜像库，指定库的镜像，用于增加其他库

* proxies：此设置，主要用于无法直接访问中心的库用户配置

* profiles：类似于pom.xml中的profile元素，主要包括activation,repositories,pluginRepositories 和properties元素 

* repositories 和pluginRepositories：定义其他开发库和插件开发库。对于团队来说，肯定有自己的开发库。可以通过此配置来定义

* properties：maven 的properties作为placeholder值，如ant的properties。包括以下的5种类型值：
  + env，返回当前的环境变量
  + project.x，返回pom中定义的元素值，如project.version
  + settings.x，返回settings.xml中定义的元素
  + java系统属性，所有经过java.lang.System.getProperties()返回的值
  + x，用户自己设定的值
* activation：用于激活此profile
  + jdk:如果匹配指定的jdk版本，将会激活
  + os:操作系统
  + property：如果maven能检测到相应的属性
  + file: 用于判断文件是否存在或者不存在

* active profiles：除了使用activation来激活profile，同样可以通过activeProfiles来激活

## maven多模块管理
可以使用Maven来管理多个项目，首先是添加一个父pom.xml 文件，其中父pom.xml 的packaging 必须为 pom 类型。
此时可以把需管理的项目的共用的dependencies ,plugin 移动到这个父pom.xml ，然后使用modules 添加到父pom.xml 中。

```ruby
&lt;modules&gt;
  &lt;module&gt;childProject&lt;/module&gt;
&lt;/modules&gt;
```
修改子项目的pom.xml ，添加一个parent 元素

```ruby
&lt;parent&gt;
    &lt;artifactId&gt;parentProject&lt;/artifactId&gt;
    &lt;groupId&gt;com.test&lt;/groupId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;relativePath&gt;../&lt;/relativePath&gt;
&lt;/parent&gt;
```

## maven deploy
玩过 maven 私服的都知道这个玩意，在本地的 pom 文件里做好配置，执行下 maven 的 deploy 即可把新的 jar/war等 部署到私服上，pom中添加以下配置

```ruby
&lt;distributionManagement&gt;
  &lt;repository&gt;
    &lt;id&gt;releases&lt;/id&gt;
    &lt;name&gt;Nexus Release Repository&lt;/name&gt;
    &lt;url&gt;http://domain:port/xxx/releases/&lt;/url&gt;
  &lt;/repository&gt;
  &lt;snapshotRepository&gt;
    &lt;id&gt;snapshots&lt;/id&gt;
    &lt;name&gt;Nexus Snapshot Repository&lt;/name&gt;
    &lt;url&gt; http://domain:port/xxx/snapshots/&lt;/url&gt;
  &lt;/snapshotRepository&gt;
&lt;/distributionManagement&gt;
```
然后maven/conf下的settings中的servers节点加入如下配置：

```ruby
&lt;server&gt;
  &lt;id&gt;releases&lt;/id&gt;
  &lt;username&gt;username&lt;/username&gt;
  &lt;password&gt;password&lt;/password&gt;
&lt;/server&gt;
&lt;server&gt;
  &lt;id&gt;snapshots&lt;/id&gt;
  &lt;username&gt; username &lt;/username&gt;
  &lt;password&gt; password &lt;/password&gt;
&lt;/server&gt;
```

## maven常用命令
下面列举一些maven的常用命令，至于具体情况可谷歌或者度娘

```ruby
mvn archetype：create 创建Maven项目
mvn compile 编译源代码
mvn deploy 发布项目
mvn test-compile 编译测试源代码
mvn test 运行应用程序中的单元测试
mvn site 生成项目相关信息的网站
mvn clean 清除项目目录中的生成结果
mvn package 根据项目生成的jar
mvn install 在本地Repository中安装jar
mvn eclipse:eclipse 生成eclipse项目文件
mvnjetty:run 启动jetty服务
mvntomcat:run 启动tomcat服务
mvn clean package -Dmaven.test.skip=true:清除以前的包后重新打包，跳过测试
```

## maven生命周期
Maven的生命周期是为了对所有的构建过程进行了抽象了，便于统一。

```ruby
clean(清理)
此生命周期旨在给工程做清理工作，它主要包含以下阶段：
pre-clean - 执行项目清理前所需要的工作。
clean - 清理上一次build项目生成的文件。
post-clean - 执行完成项目清理所需的工作.
default(默认)
validate - 验证项目是否正确且所有必要的信息都可用。
initialize - 初始化构建工作，如：设置参数，创建目录等。
generate-sources - 为包含在编译范围内的代码生成源代码.
process-sources - 处理源代码, 如过滤值.
generate-resources -
process-resources - 复制并处理资源文件，至目标目录，准备打包。
compile - 编译项目中的源代码.
process-classes - 为编译生成的文件做后期工作, 例如做Java类的字节码增强.
generate-test-sources - 为编译内容生成测试源代码.
process-test-sources - 处理测试源代码。
generate-test-resources -
process-test-resources - 复制并处理资源文件，至目标测试目录。
test-compile - 将需测试源代码编译到路径。一般来说，
是编译/src/test/java目录下的java文件至目标输出的测试classpath目录中。
process-test-classes -
test - 使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。
prepare-package -
package - 接受编译好的代码，打包成可发布的格式，如 JAR 。
pre-integration-test -
integration-test - 按需求将发布包部署到运行环境。
post-integration-test -
verify -
install -将包安装到本地仓库，给其他本地引用提供依赖。
deploy -完成集成和发布工作，将最终包复制到远程仓库以便分享给其他开发人员。
site(站点)
pre-site - 执行一些生成项目站点前的准备工作。
site - 生成项目站点的文档。
post-site - 执行需完成站点生成的工作，如站点部署的准备工作。
site-deploy - 向制定的web服务器部署站点生成文件。
```</description>
        <pubDate>Thu, 05 May 2016 12:31:43 +0800</pubDate>
        <link>http://xhuiinit.github.io//blog/maven/2016/05/05/maven.md/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//blog/maven/2016/05/05/maven.md/</guid>
        
        <category>maven</category>
        
        
        <category>blog</category>
        
        <category>maven</category>
        
      </item>
    
      <item>
        <title>intellij idea15 + maven使用</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;简单使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jdk&quot; id=&quot;markdown-toc-jdk&quot;&gt;安装JDK&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maven&quot; id=&quot;markdown-toc-maven&quot;&gt;安装maven&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#intellij-idea&quot; id=&quot;markdown-toc-intellij-idea&quot;&gt;安装intellij idea&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maven-1&quot; id=&quot;markdown-toc-maven-1&quot;&gt;一个简单的maven实例&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;管理本地仓库及远端仓库&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;本地仓库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;远端仓库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;中央远端仓库&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven-2&quot; id=&quot;markdown-toc-maven-2&quot;&gt;maven配置详解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven-3&quot; id=&quot;markdown-toc-maven-3&quot;&gt;maven多模块管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven-deploy&quot; id=&quot;markdown-toc-maven-deploy&quot;&gt;maven deploy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven-4&quot; id=&quot;markdown-toc-maven-4&quot;&gt;maven常用命令&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven-5&quot; id=&quot;markdown-toc-maven-5&quot;&gt;maven生命周期&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;简单使用&lt;/h2&gt;

&lt;p&gt;工欲善其事，必先利其器。笔者用的是64位windows系统，下载安装相应的软件：&lt;/p&gt;

&lt;h3 id=&quot;jdk&quot;&gt;安装JDK&lt;/h3&gt;
&lt;p&gt;这里笔者用的是jdk1.7,下载地址：&lt;a href=&quot;http://pan.baidu.com/s/1pLd6zz1&quot;&gt;http://pan.baidu.com/s/1pLd6zz1&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;maven&quot;&gt;安装maven&lt;/h3&gt;
&lt;p&gt;下载maven，&lt;a href=&quot;http://pan.baidu.com/s/1hsNfUCG&quot;&gt;http://pan.baidu.com/s/1hsNfUCG&lt;/a&gt;，解压安装&lt;/p&gt;

&lt;p&gt;设置环境变量，&lt;code class=&quot;highlighter-rouge&quot;&gt;MAVEN_HOME&lt;/code&gt;,如：D:\WORKING\apache-maven-3.2.5，设置到&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;中&lt;/p&gt;

&lt;p&gt;校验是否安装成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Administrator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Apache&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Maven&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a6b3acb947671f09b81f49094c53f426d8cea1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Maven&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;home: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WORKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;version: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0_55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;vendor: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Corporation&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;home: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WORKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JAVA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdk1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jre&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;locale: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zh_CN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;encoding: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GBK&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OS&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;windows 8.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;version: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;6.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;arch: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amd64&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;family: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;windows&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;intellij-idea&quot;&gt;安装intellij idea&lt;/h3&gt;
&lt;p&gt;下载intellij idea15,下载地址 &lt;a href=&quot;http://pan.baidu.com/s/1hsNfUCG&quot;&gt;http://pan.baidu.com/s/1dFa2wyX&lt;/a&gt;，解压安装，注册时选择“License server”输入“http://15.idea.lanyus.com/”点击“OK”即可快速激活&lt;/p&gt;

&lt;h3 id=&quot;maven-1&quot;&gt;一个简单的maven实例&lt;/h3&gt;
&lt;p&gt;打开刚刚安装的intellij idea，新建Module，这里我们以创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;web&lt;/code&gt;项目为例
&lt;img src=&quot;/images/maven/A017E6A0997FF1C210091D7CCD9030AE.png&quot; alt=&quot;New Module&quot; /&gt;
选择JDK版本，选中&lt;code class=&quot;highlighter-rouge&quot;&gt;maven-archetype-webapp&lt;/code&gt;，点&lt;strong&gt;next&lt;/strong&gt;；
&lt;img src=&quot;/images/maven/53A2F4034A083DE8D4E5622249CD823C.png&quot; alt=&quot;New Module&quot; /&gt;
填写&lt;code class=&quot;highlighter-rouge&quot;&gt;GroupId&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;ArtifactId&lt;/code&gt;，版本默认1.0-SNAPSHOT，点击&lt;strong&gt;next&lt;/strong&gt;；
&lt;img src=&quot;/images/maven/2385850B1D9FD2682DC4E9E888AC02F7.png&quot; alt=&quot;New Module&quot; /&gt;
选择&lt;code class=&quot;highlighter-rouge&quot;&gt;Maven home&lt;/code&gt;路径，选择&lt;code class=&quot;highlighter-rouge&quot;&gt;settings&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;repository&lt;/code&gt;，点击&lt;strong&gt;next&lt;/strong&gt;；
&lt;img src=&quot;/images/maven/D71C166A06A6A544BF709B5E0D61C1EB.png&quot; alt=&quot;New Module&quot; /&gt;
点击&lt;strong&gt;finsh&lt;/strong&gt;，这时就生成了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;maven web&lt;/code&gt;工程。
&lt;img src=&quot;/images/maven/393C637B36FB93912AFB6214AFCDAFA9.png&quot; alt=&quot;New Module&quot; /&gt;
然后可在该界面&lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;install&lt;/code&gt;等&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;管理本地仓库及远端仓库&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;本地仓库&lt;/h3&gt;
&lt;p&gt;在settings中加入&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;localRepository&amp;gt;&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\Administrator\.m2\repository&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/localRepository&amp;gt;&lt;/code&gt;，既本地仓库&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;远端仓库&lt;/h3&gt;
&lt;p&gt;在mirrors节点下加入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mirror&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nexus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;
  &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mi&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rrorOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;central&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/name&amp;gt;
  &amp;lt;url&amp;gt;http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nexus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;/u&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/mirror&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;&lt;/code&gt;表示只为central仓库做镜像&lt;/p&gt;

&lt;p&gt;如果想为所有的仓库做镜像那么可以改为&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;url&amp;gt;&lt;/code&gt;为具体的远端仓库地址，笔者使用的Nexus架设私服。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;中央远端仓库&lt;/h3&gt;
&lt;p&gt;当我们创建一个简单的Maven项目后(只需要在pom.xml配置好依赖)，
运行mvn clean install就可以把项目构建好，不需要我们手工下载任何jar，
这全靠中央仓库的存在，它会自动从仓库下载。
这个仓库的定义是在&lt;code class=&quot;highlighter-rouge&quot;&gt;${M2_HOME}/lib/maven-2.0.10-uber.jar&lt;/code&gt; 里面。
你可以在里面找到&lt;code class=&quot;highlighter-rouge&quot;&gt;\org\apache\maven\project\pom-4.0.0.xml&lt;/code&gt; 这个文件，
在这个文件里面定义了默认中央仓库的地址：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;        
    &amp;lt;name&amp;gt; Maven Repository Switchboard&amp;lt;/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/layout&amp;gt;        
    &amp;lt;url&amp;gt; http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maven2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/url&amp;gt;        
    &amp;lt;snapshots&amp;gt;        
      &amp;lt;enabled&amp;gt; false&amp;lt;/en&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/snapshots&amp;gt;        
  &amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/repositories&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这里推荐一个很好的仓库，&lt;a href=&quot;&amp;gt;http://mvnrepository.com/&quot;&gt;http://mvnrepository.com/&lt;/a&gt; ，相信地球人都知道这个。&lt;/p&gt;

&lt;h2 id=&quot;maven-2&quot;&gt;maven配置详解&lt;/h2&gt;
&lt;p&gt;先来说说settings.xml，settings.xml对于maven来说相当于全局性的配置，用于所有的项目。在maven中存在两个settings.xml，
一个位于maven的安装目录conf下面，作为全局性配置。
对于团队设置，保持一致的定义是关键，所以maven/conf下面的settings.xml就作为团队共同的配置文件。
保证所有的团队成员都拥有相同的配置。当然对于每个成员，都需要特殊的自定义设置，如用户信息，所以另外一个settings.xml就作为本地配置。
默认的位置为：${user.dir}/.m2/settings.xml目录中（${user.dir} 指windows 中的用户目录）。
settings.xml基本结构如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:xsi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;xsi&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:schemaLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 
                               http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interactiveMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usePluginRegistry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluginGroups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mirrors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeProfiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/settings&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;简单介绍一下几个主要的配置因素：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;localRepository：表示本地库的保存位置，也就是maven2主要的jar保存位置，默认在${user.dir}/.m2/repository，如果需要另外设置，就换成其他的路径。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;offline：如果不想每次编译，都去查找远程中心库，那就设置为true。当然前提是你已经下载了必须的依赖包。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;servers：在POM中的 distributionManagement元素定义了开发库。然而，特定的username和pwd不能使用于pom.xml，所以通过此配置来保存server信息&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mirrors：表示镜像库，指定库的镜像，用于增加其他库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;proxies：此设置，主要用于无法直接访问中心的库用户配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;profiles：类似于pom.xml中的profile元素，主要包括activation,repositories,pluginRepositories 和properties元素&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;repositories 和pluginRepositories：定义其他开发库和插件开发库。对于团队来说，肯定有自己的开发库。可以通过此配置来定义&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;properties：maven 的properties作为placeholder值，如ant的properties。包括以下的5种类型值：
    &lt;ul&gt;
      &lt;li&gt;env，返回当前的环境变量&lt;/li&gt;
      &lt;li&gt;project.x，返回pom中定义的元素值，如project.version&lt;/li&gt;
      &lt;li&gt;settings.x，返回settings.xml中定义的元素&lt;/li&gt;
      &lt;li&gt;java系统属性，所有经过java.lang.System.getProperties()返回的值&lt;/li&gt;
      &lt;li&gt;x，用户自己设定的值&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;activation：用于激活此profile
    &lt;ul&gt;
      &lt;li&gt;jdk:如果匹配指定的jdk版本，将会激活&lt;/li&gt;
      &lt;li&gt;os:操作系统&lt;/li&gt;
      &lt;li&gt;property：如果maven能检测到相应的属性&lt;/li&gt;
      &lt;li&gt;file: 用于判断文件是否存在或者不存在&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;active profiles：除了使用activation来激活profile，同样可以通过activeProfiles来激活&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;maven-3&quot;&gt;maven多模块管理&lt;/h2&gt;
&lt;p&gt;可以使用Maven来管理多个项目，首先是添加一个父pom.xml 文件，其中父pom.xml 的packaging 必须为 pom 类型。
此时可以把需管理的项目的共用的dependencies ,plugin 移动到这个父pom.xml ，然后使用modules 添加到父pom.xml 中。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;childProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/module&amp;gt;
&amp;lt;/mo&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;修改子项目的pom.xml ，添加一个parent 元素&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parentProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/artifactId&amp;gt;
    &amp;lt;groupId&amp;gt;com.test&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/version&amp;gt;
    &amp;lt;relativePath&amp;gt;../&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/relativePath&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;maven-deploy&quot;&gt;maven deploy&lt;/h2&gt;
&lt;p&gt;玩过 maven 私服的都知道这个玩意，在本地的 pom 文件里做好配置，执行下 maven 的 deploy 即可把新的 jar/war等 部署到私服上，pom中添加以下配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distributionManagement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releases&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;
    &amp;lt;name&amp;gt;Nexus Release Repository&amp;lt;/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releases&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/url&amp;gt;
  &amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshotRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;
    &amp;lt;name&amp;gt;Nexus Snapshot Repository&amp;lt;/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/url&amp;gt;
  &amp;lt;/sn&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apshotRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/distributionManagement&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后maven/conf下的settings中的servers节点加入如下配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releases&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;
  &amp;lt;username&amp;gt;username&amp;lt;/use&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/password&amp;gt;
&amp;lt;/se&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&amp;gt;
  &amp;lt;username&amp;gt; username &amp;lt;/use&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/password&amp;gt;
&amp;lt;/se&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;maven-4&quot;&gt;maven常用命令&lt;/h2&gt;
&lt;p&gt;下面列举一些maven的常用命令，至于具体情况可谷歌或者度娘&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;archetype&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;创建&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Maven&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;项目&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;编译源代码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;发布项目&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;编译测试源代码&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;运行应用程序中的单元测试&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;生成项目相关信息的网站&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;清除项目目录中的生成结果&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;根据项目生成的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;在本地&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Repository&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中安装&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eclipse&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:eclipse&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;生成&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eclipse&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;项目文件&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvnjetty&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:run&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;启动&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jetty&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;服务&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvntomcat&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:run&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;启动&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tomcat&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;服务&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dmaven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;清除以前的包后重新打包，跳过测试&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;maven-5&quot;&gt;maven生命周期&lt;/h2&gt;
&lt;p&gt;Maven的生命周期是为了对所有的构建过程进行了抽象了，便于统一。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;清理&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;此生命周期旨在给工程做清理工作，它主要包含以下阶段：&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行项目清理前所需要的工作。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;清理上一次&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;项目生成的文件。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行完成项目清理所需的工作&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;默认&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;validate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;验证项目是否正确且所有必要的信息都可用。&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;初始化构建工作，如：设置参数，创建目录等。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;为包含在编译范围内的代码生成源代码&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;处理源代码&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;如过滤值&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;复制并处理资源文件，至目标目录，准备打包。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;编译项目中的源代码&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;为编译生成的文件做后期工作&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;例如做&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类的字节码增强&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;为编译内容生成测试源代码&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;处理测试源代码。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;复制并处理资源文件，至目标测试目录。&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;将需测试源代码编译到路径。一般来说，&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;是编译&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;目录下的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;文件至目标输出的测试&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;目录中。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;接受编译好的代码，打包成可发布的格式，如&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;integration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;integration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按需求将发布包部署到运行环境。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;integration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;将包安装到本地仓库，给其他本地引用提供依赖。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;完成集成和发布工作，将最终包复制到远程仓库以便分享给其他开发人员。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;站点&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行一些生成项目站点前的准备工作。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;生成项目站点的文档。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行需完成站点生成的工作，如站点部署的准备工作。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;向制定的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;服务器部署站点生成文件。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 05 May 2016 12:31:43 +0800</pubDate>
        <link>http://xhuiinit.github.io//blog/maven/2016/05/05/maven/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//blog/maven/2016/05/05/maven/</guid>
        
        <category>maven</category>
        
        
        <category>blog</category>
        
        <category>maven</category>
        
      </item>
    
      <item>
        <title>windows环境下安装jekyll开发环境</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ruby&quot; id=&quot;markdown-toc-ruby&quot;&gt;安装 Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#devkit&quot; id=&quot;markdown-toc-devkit&quot;&gt;安装 DevKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jekyll&quot; id=&quot;markdown-toc-jekyll&quot;&gt;安装 Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pygments&quot; id=&quot;markdown-toc-pygments&quot;&gt;安装 Pygments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jekyll-1&quot; id=&quot;markdown-toc-jekyll-1&quot;&gt;启动 Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jekyll是一个静态网站生成工具。它允许用户使用HTML、Markdown或Textile来建立静态页面，然后通过模板引擎Liquid（Liquid Templating Engine）来运行.&lt;/p&gt;

&lt;p&gt;网上已经有很多jekyll的安装方法，（由于本人记性太差）此处仅记录下来以免忘记了。可分为以下几个重要步骤：&lt;/p&gt;

&lt;h2 id=&quot;ruby&quot;&gt;安装 Ruby&lt;/h2&gt;

&lt;p&gt;Ruby下载地址：&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;download Ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在 “RubyInstallers” 部分，选择某个版本点击下载。 此处选择 Ruby 2.3.0 (x64)安装包。&lt;/p&gt;

&lt;p&gt;开始安装，这里我安装到C:\Ruby23-x64，记得安装过程中勾选&lt;code class=&quot;highlighter-rouge&quot;&gt;Add Ruby executables to your PATH&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;打开命令提示符，输入&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt;检测是否安装Ruby成功，如果输出&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby 2.3.0p0 (2015-12-25 revision 53290) [x64-mingw32]&lt;/code&gt;表示安装成功。&lt;/p&gt;

&lt;h2 id=&quot;devkit&quot;&gt;安装 DevKit&lt;/h2&gt;

&lt;p&gt;DevKit 是一个在 Windows 上帮助简化安装及使用 Ruby C/C++ 扩展如 RDiscount 和 RedCloth 的工具箱。 详细的安装指南可以在程序的wiki 页面 阅读。&lt;/p&gt;

&lt;p&gt;继续前往下载地址：&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;download DevKit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载同系统及 Ruby 版本相对应的 DevKit 安装包，这里选择下载DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe。&lt;/p&gt;

&lt;p&gt;运行安装包并解压缩至某文件夹，如 C:\DevKit。&lt;/p&gt;

&lt;p&gt;通过初始化来创建 config.yml 文件。在命令行窗口内，输入下列命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DevKit&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;notepad&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在打开的记事本窗口中，于末尾添加新的一行 - C:\Ruby200-x64，保存文件并退出。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# This configuration file contains the absolute path locations of all&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# installed Rubies to be enhanced to work with the DevKit. This config&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# file is generated by the &#39;ruby dk.rb init&#39; step and may be modified&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# before running the &#39;ruby dk.rb install&#39; step. To include any installed&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Rubies that were not automagically discovered, simply add a line below&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# the triple hyphens with the absolute path to the Ruby root directory.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Example:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ---&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# - C:/ruby19trunk&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# - C:/ruby192dev&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Ruby23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;回到命令行窗口内，审查（非必须）并安装。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;review&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;安装 Jekyll&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paginate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pygments&quot;&gt;安装 Pygments&lt;/h2&gt;

&lt;p&gt;Jekyll 里默认的语法高亮插件是 Pygments。 它需要安装 Python 并在网站的配置文件_config.yml 里将 highlighter 的值设置为pygments。&lt;/p&gt;

&lt;p&gt;安装 Python&lt;/p&gt;

&lt;p&gt;Python下载地址：&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;download python&lt;/a&gt;，这里下载python3.5.1&lt;/p&gt;

&lt;p&gt;安装，添加环境变量&lt;/p&gt;

&lt;p&gt;检验 Python 安装是否成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;–&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;		
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出：&lt;code class=&quot;highlighter-rouge&quot;&gt;Python 2.7.6&lt;/code&gt;，表示安装成功&lt;/p&gt;

&lt;p&gt;安装 Pygments
命令行执行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;easy_install&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pygments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jekyll-1&quot;&gt;启动 Jekyll&lt;/h2&gt;

&lt;p&gt;按照官方的 Jekyll 快速开始手册 的步骤， 一个新的 Jekyll 博客可以被建立并在localhost:4000浏览。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myblog&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myblog&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 29 Apr 2016 15:31:43 +0800</pubDate>
        <link>http://xhuiinit.github.io//blog/jekyll/2016/04/29/20160429153210/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//blog/jekyll/2016/04/29/20160429153210/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Access-Control-Allow-Origin跨域现象分析及解决方案</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;什么是跨域&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;跨域现象剖析&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;实验一：协议、域名相同，端口号不同&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;实验二：协议、端口相同，域名不同&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;实验三：协议、端口相同，一个是子域名，一个是主域名&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;实验四：协议、端口、域名相同，目录不同&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ip&quot; id=&quot;markdown-toc-ip&quot;&gt;实验五：协议、端口相同,一个是域名，另一个是域名对应的ip&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xmlhttprequest&quot; id=&quot;markdown-toc-xmlhttprequest&quot;&gt;实验六：XMLHttpRequest请求同源接口，后端控制跨域访问&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#xmlhttprequest-1&quot; id=&quot;markdown-toc-xmlhttprequest-1&quot;&gt;XMLHttpRequest跨域的解决方案&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#header&quot; id=&quot;markdown-toc-header&quot;&gt;解决方案一：修改访问服务器的header，跳过同源策略限制。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#scriptjsonp&quot; id=&quot;markdown-toc-scriptjsonp&quot;&gt;解决方案二：动态创建script（俗称JSONP）&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#js&quot; id=&quot;markdown-toc-js&quot;&gt;实例1：跨域读取js文件&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;实例2：跨域获取服务器的简单数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#calback&quot; id=&quot;markdown-toc-calback&quot;&gt;实例3：传递calback参数，服务器动态返回回调函数名&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jqueryjsonp&quot; id=&quot;markdown-toc-jqueryjsonp&quot;&gt;实例4：通过jQuery封装的JSONP进行跨域通信（业界常用）&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;什么是跨域&lt;/h2&gt;
&lt;p&gt;谈跨域概念之前，我们应该讲讲&lt;code class=&quot;highlighter-rouge&quot;&gt;同源策略&lt;/code&gt;这个东西。同源策略是现代浏览器为了安全性问题而制定的一种安全策略,该策略限制了一个源（origin）中加载文本或脚本与来自其它源（origin）中资源的交互方式，请记住是交互方式。WIKI上有详细说明：&lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;Same-origin policy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;那么我们用人话来说，什么是同源策略？那就是如果有两个页面或请求来源，它们具有相同的&lt;code class=&quot;highlighter-rouge&quot;&gt;协议&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;端口&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;主机&lt;/code&gt;，那么这两个页面就是同源，符合同源策略。这样子，跨域就十分好理解了，只要违背了同源策略的标准，有一个因素出现不同，那么这两个页面就跨域。&lt;/p&gt;

&lt;p&gt;我们用表格列出跨域例子：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;页面1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;页面2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;说明&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;是否允许通信&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不同的js文件&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com/a/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com/b/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不同文件夹下的js文件&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com&lt;code class=&quot;highlighter-rouge&quot;&gt;:80&lt;/code&gt;/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://www.t.com&lt;code class=&quot;highlighter-rouge&quot;&gt;:8080&lt;/code&gt;/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;端口不同&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http:&lt;/code&gt;//www.t.com/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https:&lt;/code&gt;//www.t.comb.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;协议不同&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;www.t.com&lt;/code&gt;/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;www.tt.com&lt;/code&gt;/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;主机不同&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;www.t.com&lt;/code&gt;/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.204.69&lt;/code&gt;/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;主机和主机对应的ip&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不允许通信&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;www.t.com&lt;/code&gt;/a.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://&lt;code class=&quot;highlighter-rouge&quot;&gt;t.com&lt;/code&gt;/b.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;子域名和主域名&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;不允许通信&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;section-1&quot;&gt;跨域现象剖析&lt;/h2&gt;
&lt;p&gt;了解概念后，我们看看跨域到底会带来怎么样的现象&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;实验一：协议、域名相同，端口号不同&lt;/h3&gt;
&lt;p&gt;准备条件：本地创建两个web服务，一个是80端口，一个是8080端口。
本地新建&lt;code class=&quot;highlighter-rouge&quot;&gt;jsonp.html&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;cross80.php&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;cross8080.php&lt;/code&gt;。
其中&lt;code class=&quot;highlighter-rouge&quot;&gt;jsonp.html&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;cross80.php&lt;/code&gt;放在80端口web目录下，&lt;code class=&quot;highlighter-rouge&quot;&gt;cross8080.php&lt;/code&gt;放在8080端口web目录下。&lt;/p&gt;

&lt;p&gt;说明：实验一将显示全部代码，后面实验只显示核心代码。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首先我们访问通过AJAX访问cross80.php.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;jsonp.html代码如下 (为了集中描述跨域问题，我们这里使用jQuery)：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;		&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:80/cross80.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
					&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;get&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;cross.php 代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;success!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们打开浏览器，访问http://localhost:80/cross80.php，浏览器会弹窗。输出&lt;strong&gt;success！&lt;/strong&gt;。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;然后我们访问cross8080.php&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cross8080.php&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;cros80.php&lt;/code&gt;保持一模一样&lt;/p&gt;

&lt;p&gt;jsonp.html中的访问地址修改为http://localhost:8080/cross8080.php&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

                                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/cross8080.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                                &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                                        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;get&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                                                &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我们发现，浏览器没有弹窗，查看chrome控制台，显示一下结果：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_QQ%E5%9B%BE%E7%89%8720160315185609.png&quot; /&gt;
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_QQ%E5%9B%BE%E7%89%8720160315185631.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图片截得太小，我把提示打出来:&lt;/p&gt;

&lt;blockquote&gt;XMLHttpRequest cannot load http://localhost:8080/cross8080.php. 
No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. 
Origin &#39;http://localhost&#39; is therefore not allowed access.&lt;/blockquote&gt;

&lt;p&gt;提示已经说得很清楚，我翻译一下:XMLHttpRequest无法加载cross8080.php这个文件，因为端口号不同，这逼跨域了,根据浏览器同源策略，不给予访问。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;实验二：协议、端口相同，域名不同&lt;/h3&gt;
&lt;p&gt;准备域名：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;www.test1.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;www.test2.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;准备页面：&lt;/p&gt;

&lt;p&gt;jsonp.html 代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test1.com/test/test1.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;http://www.test1.com/jsonp.html&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;http://www.test1.com/&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;/test1.php&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;jsonp.html,test1.php(放在www.test1.com上)&lt;/li&gt;
  &lt;li&gt;test2.php(放在www.test2.com上)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.访问test1.php&lt;/p&gt;

&lt;p&gt;jsonp.html 代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test1.com/test1.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;test1.php 代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;success!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：浏览器正常弹框，显示&lt;strong&gt;success!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2.请求test2.php&lt;/p&gt;

&lt;p&gt;jsonp.html 代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test2.com/test2.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;test1.php 代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;success!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们先直接打开test2.php,界面显示如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2016-03-16_114223.png&quot; /&gt;
说明test2.php是可以正常访问的。&lt;/p&gt;

&lt;p&gt;我们通过jsonp.html去访问看看,显示如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2016-03-16_114702.png&quot; /&gt;
图中提示和实验一的是一模一样的，&lt;/p&gt;
&lt;blockquote&gt;XMLHttpRequest cannot load http://www.test2.com/test2.php. No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. Origin &#39;http://www.test1.com&#39; is therefore not allowed access.&lt;/blockquote&gt;
&lt;p&gt;因为跨域问题，所以不能访问到test2.php脚本。
结果：不弹窗。端口（都是80）相同，协议相同，域名不同也是违反了同源策略。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;实验三：协议、端口相同，一个是子域名，一个是主域名&lt;/h3&gt;
&lt;p&gt;准备页面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.test1.com/jsonp.html&lt;/li&gt;
  &lt;li&gt;http://test1.com/test1.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;显示提示如下：&lt;/p&gt;
&lt;blockquote&gt;XMLHttpRequest cannot load http://test1.com/test1.php. No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. Origin &#39;http://www.test1.com&#39; is therefore not allowed access.&lt;/blockquote&gt;

&lt;p&gt;结果：不弹窗。说明子域名和主域名也不能通过XMLHttpRequest进行通信。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;实验四：协议、端口、域名相同，目录不同&lt;/h3&gt;
&lt;p&gt;准备页面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.test1.com/jsonp.html&lt;/li&gt;
  &lt;li&gt;http://www.test1.com/&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;/test1.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jsonp.html 代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test1.com/test/test1.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;结果：弹窗，显示&lt;strong&gt;succes!&lt;/strong&gt;。说明不同目录不受同源策略限制。&lt;/p&gt;

&lt;h3 id=&quot;ip&quot;&gt;实验五：协议、端口相同,一个是域名，另一个是域名对应的ip&lt;/h3&gt;

&lt;p&gt;准备页面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://&lt;strong&gt;IP&lt;/strong&gt;/jsonp.html&lt;/li&gt;
  &lt;li&gt;http://www.test1.com/test1.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;提示如下：&lt;/p&gt;
&lt;blockquote&gt;XMLHttpRequest cannot load http://www.test1.com/test1.php. No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. Origin &#39;http://IP&#39; is therefore not allowed access.&lt;/blockquote&gt;

&lt;p&gt;结果：主机对应的ip和主机名也违法了同源策略。&lt;/p&gt;

&lt;h3 id=&quot;xmlhttprequest&quot;&gt;实验六：XMLHttpRequest请求同源接口，后端控制跨域访问&lt;/h3&gt;

&lt;p&gt;准备页面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.test1.com/jsonp.html&lt;/li&gt;
  &lt;li&gt;http://www.test1.com/test1.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jsonp.html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test1.com/test/test1.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;test1.php&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Location:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;success!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;提示如下：&lt;/p&gt;
&lt;blockquote&gt;XMLHttpRequest cannot load http://www.baidu.com. No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. Origin &#39;http://www.test1.com&#39; is therefore not allowed access.&lt;/blockquote&gt;

&lt;p&gt;因为后端脚本更改了header的Locaiton,更改了当前访问源头。
我们尝试把修改一下&lt;code class=&quot;highlighter-rouge&quot;&gt;$url&lt;/code&gt;,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.test1.com/test2.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Location:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;success!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$return_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;并且，我们创建一个test2.php文件
然后访问jsonp.html页面，此时正常跳转到test2.php页面。显示如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;success!&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;结果：后端修改header的Location字段时，当跳转的url非同源时，将会跨域。&lt;/p&gt;

&lt;h2 id=&quot;xmlhttprequest-1&quot;&gt;XMLHttpRequest跨域的解决方案&lt;/h2&gt;

&lt;h3 id=&quot;header&quot;&gt;解决方案一：修改访问服务器的header，跳过同源策略限制。&lt;/h3&gt;

&lt;p&gt;增加HTTP响应头的&lt;strong&gt;Access-Control-Allow-Origin&lt;/strong&gt;,如果需要跨域请求，那么请求的服务器响应头可以返回如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin: &lt;span class=&quot;nt&quot;&gt;&amp;lt;origin&amp;gt;&lt;/span&gt; | *
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;举个例子，如果我们允许来自http://baidu.com的请求，可以这样设定：&lt;/p&gt;
&lt;blockquote&gt;Access-Control-Allow-Origin: http://baidu.com&lt;/blockquote&gt;

&lt;p&gt;如果允许任何域的请求，可以这样设定：&lt;/p&gt;
&lt;blockquote&gt;Access-Control-Allow-Origin: *&lt;/blockquote&gt;

&lt;p&gt;各个语言的实现：&lt;/p&gt;

&lt;p&gt;PHP中实现：&lt;/p&gt;

&lt;p&gt;允许任何域请求：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;header(&#39;Access-Control-Allow-Origin: *&#39;);  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;允许特定域请求&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;header(&#39;Access-Control-Allow-Origin: http://pizida.com&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Java中实现：&lt;/p&gt;

&lt;p&gt;允许任何域请求：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;允许特定域请求&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://pizida.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ASP.NET中实现&lt;/p&gt;

&lt;p&gt;允许任何域请求：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AddHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnActionExecuting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;允许特定域请求&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RequestContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AddHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://pizida.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnActionExecuting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;优点：方便快捷。&lt;/li&gt;
  &lt;li&gt;缺点：缺乏安全性；需要有服务器的控制权，如果是第三方提供的接口不一定可以使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scriptjsonp&quot;&gt;解决方案二：动态创建script（俗称JSONP）&lt;/h3&gt;

&lt;p&gt;要使用动态创建script来解决问题，首先了解一下几点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我们通过前面的实验已经了解到在js中通过XMLHttpRequest进行跨域请求不允许&lt;/li&gt;
  &lt;li&gt;但是浏览器允许引用js文件，还有更多的标签允许跨域内嵌：
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script src=&quot;...&quot; &amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;标签嵌入跨域脚本。语法错误信息只能在同源脚本中捕捉到。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt;标签嵌入CSS&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;嵌入图片&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;嵌入多媒体资源&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@font-face&lt;/code&gt;引入的字体&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;载入的任何资源&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;JSON是一种用来描述数据结构的简单方式，和XML一样，却又更简洁。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样，我们是否可以用一种方法让服务端返回具有JSON格式的数据，JSON中包含script将会使用的函数或方法，然后在页面嵌入这些·&lt;script&gt;·，达到调用目标函数的目的，从而进行跨域通信。
说了这些，我们还是实践一下为妙！&lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;js&quot;&gt;实例1：跨域读取js文件&lt;/h4&gt;

&lt;p&gt;现在localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;80&lt;/code&gt;上有一个jsonp.html页面，localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt;上有一个test.js页面
jsonp.html代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/test.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;test.js代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在刷新浏览器，显示如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2016-03-17_115854.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;你们知道肯定会弹窗的了，对不对？上面说了&lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt;标签嵌入浏览器是支持的，并且这是一种很流行的做法。我们的确通过这种做法引用了其他域的资源，获得了数据。那么我们是否可以同样地获取更多的后端数据呢？&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;实例2：跨域获取服务器的简单数据&lt;/h4&gt;

&lt;p&gt;同样，在localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;80&lt;/code&gt;上有一个jsonp.html页面，这次localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt;上换成一个test.php文件。&lt;/p&gt;

&lt;p&gt;jsonp.html代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;my_alert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;跨域获得数据，服务器传来的提示是：&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/test.php&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;实际上这里有两段js，第一段是声明客户端的函数，第二段是需要获取的服务端返回的数据（精妙之处就在这里！）
我们就拿端口号不同从而造成跨域问题来解决：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;my_alert({&#39;msg&#39;:&#39;80端口，你好！我是8080端口&#39;})&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我们因为知道了客户端定义的是&lt;code class=&quot;highlighter-rouge&quot;&gt;my_alert&lt;/code&gt;函数，所以这里加上了改函数名，并且构建了一个JSON，里面有一个msg元素。&lt;/p&gt;

&lt;p&gt;刷新页面，显示如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2016-03-17_121825.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;貌似已经可以成功跨域通信啦！但是我是事先知道&lt;code class=&quot;highlighter-rouge&quot;&gt;my_alert&lt;/code&gt;函数名，如果不知道呢？那服务端如何处理，假设我还需要传递参数呢，服务端通过参数进行一系列逻辑呢？要如何实现？&lt;/p&gt;

&lt;h4 id=&quot;calback&quot;&gt;实例3：传递calback参数，服务器动态返回回调函数名&lt;/h4&gt;

&lt;p&gt;同样，在localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;80&lt;/code&gt;上有一个jsonp.html页面，localhost:&lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt;上是一个test.php文件。&lt;/p&gt;

&lt;p&gt;jsonp.html代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;my_alert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;查询到的商品是:&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;，价格为：&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/test.php?product=苹果&amp;amp;callback=my_alert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;test.php代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$myFunction= $_GET[&#39;callback&#39;];
$product= $_GET[&#39;product&#39;];

//可以点业务逻辑什么的,获得了price

$price=6888;

echo &quot;{$myFunction}({&#39;product&#39;:&#39;$product&#39;,&#39;price&#39;:&#39;$price&#39;})&quot;;
exit;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;刷新页面，显示如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2016-03-17_132901.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在我们把调用的函数通过calback传递过去，那么服务端就不用关心客户端到底是什么函数名了。同理，还能传递其他参数。&lt;/p&gt;

&lt;p&gt;这样子实际上就完成了嵌入script解决跨域问题。但是我们这样子写是不是太松散了，可否模块化处理呢？那就使用jQuery吧！&lt;/p&gt;

&lt;h4 id=&quot;jqueryjsonp&quot;&gt;实例4：通过jQuery封装的JSONP进行跨域通信（业界常用）&lt;/h4&gt;

&lt;p&gt;JSONP并没有什么高大上的地方，只是将我们前面几种实例封装起来，放进jQuery中供客户端调用。现在我们来实践一下吧。&lt;/p&gt;

&lt;p&gt;jsonp.html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/test.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

			&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;get&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;		
				&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;product=香蕉&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsonp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	  &lt;span class=&quot;c1&quot;&gt;//返回的数据类型，定义为jsonp&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;jsonp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;callback&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	  &lt;span class=&quot;c1&quot;&gt;//传给服务端的，为获得回调名称，默认为calllback&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;jsonpCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my_alert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//回调函数名称，可以不写&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;test.php我们不做任何修改。
查看页面，如下：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_2.jpg&quot; /&gt;
确定弹窗已经返回了香蕉，是我们代码中设置的。&lt;/p&gt;

&lt;p&gt;我们再看看请求过去的参数以及响应地址和端口，证明跨域访问成功：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_QQ%E5%9B%BE%E7%89%8720160317142025.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后看看console.log的内容是否正确：
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_11.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;总结&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;其实跨域问题解决起来十分简单，我们可以更改header响应实现，也可以通过动态嵌入script（也就是封装好的JSONP）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JSONP是大家发挥聪明才智想出来的办法，也是业界最常用最方便的跨域解决方法。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;现在相信大家看见&lt;code class=&quot;highlighter-rouge&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt;等字眼就再也不会陌生了。当然除了这两个方法，还有一些其他方案，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;document.domain+iframe&lt;/code&gt;的设置,&lt;code class=&quot;highlighter-rouge&quot;&gt;window.name&lt;/code&gt;实现的跨域数据传输,使用&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML5 postMessage&lt;/code&gt;,利用&lt;code class=&quot;highlighter-rouge&quot;&gt;flash&lt;/code&gt;,因为JSONP是最常用的，也是最实用的，其他方案就不展开了，大家可以自行研究。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本文后端语言完全可以换成其他，例如Java,Python,Ruby等都是可以的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 15 Mar 2016 17:40:19 +0800</pubDate>
        <link>http://xhuiinit.github.io//technology/2016/03/15/how-to-solve-cross-origin/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//technology/2016/03/15/how-to-solve-cross-origin/</guid>
        
        <category>技术</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Jekyll本地搭建开发环境以及Github部署流程</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jekyll&quot; id=&quot;markdown-toc-jekyll&quot;&gt;本地搭建Jekyll&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#gemjekyll&quot; id=&quot;markdown-toc-gemjekyll&quot;&gt;使用gem安装Jekyll&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyll-1&quot; id=&quot;markdown-toc-jekyll-1&quot;&gt;使用Jekyll创建你的博客站点&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyll-2&quot; id=&quot;markdown-toc-jekyll-2&quot;&gt;开启Jekyll服务&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyll-3&quot; id=&quot;markdown-toc-jekyll-3&quot;&gt;使用Jekyll写博文&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#github-pages&quot; id=&quot;markdown-toc-github-pages&quot;&gt;使用Github pages服务生成个人博客&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;创建我们的仓库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#github-pages-1&quot; id=&quot;markdown-toc-github-pages-1&quot;&gt;为仓库创建Github Pages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyllgithub&quot; id=&quot;markdown-toc-jekyllgithub&quot;&gt;将本地jekyll代码部署到Github上的仓库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;克隆仓库到本地&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyll-4&quot; id=&quot;markdown-toc-jekyll-4&quot;&gt;拷贝本地的jekyll目录到版本库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyllgithub-pages&quot; id=&quot;markdown-toc-jekyllgithub-pages&quot;&gt;本地Jekyll站点部署到Github Pages上（相当于线上环境）&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#usernamegithubio&quot; id=&quot;markdown-toc-usernamegithubio&quot;&gt;为username.github.io绑定个性域名&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;总结&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;本地开发：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;发布线上&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;博客从wordpres迁移到Jekyll上来了，整个过程还是很顺利的。Jekyll是什么？它是一个简单静态博客生成工具，为什么是静态，因为它是不需要数据库的，通过&lt;a href=&quot;http://wowubuntu.com/markdown/&quot;&gt;markdown&lt;/a&gt;编写静态文件，生成Html页面，它的优点是提升了页面的响应速度，并且让博主可以只专注于写文章，不用再去考虑如何排版（markdown语法很好的解决了排版问题）。那么为什么要迁移到Jekyll呢？不是因为跟风，也不是为了提高自我，完全就是瞎折腾！&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;本地搭建Jekyll&lt;/h2&gt;
&lt;p&gt;本次安装可以MacOS或Linux下进行。&lt;/p&gt;

&lt;h3 id=&quot;gemjekyll&quot;&gt;使用gem安装Jekyll&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这样就把jekyll安装完成了。
如果本地没有gem，那么需要先安装Ruby和gem，这里就不介绍了。&lt;/p&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;使用Jekyll创建你的博客站点&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#创建你的站点&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;控制台可以看见类似 &lt;code class=&quot;highlighter-rouge&quot;&gt;New jekyll site installed in /home/user/blog.&lt;/code&gt;的提示&lt;/p&gt;

&lt;h3 id=&quot;jekyll-2&quot;&gt;开启Jekyll服务&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;    	 &lt;span class=&quot;c1&quot;&gt;#进入blog目录,记得一定要进入创建的目录，否则服务无法开启&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt; 	 &lt;span class=&quot;c1&quot;&gt;#启动你的http服务 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;本地服务开启后，Jekyll服务默认端口是4000，所以我打开浏览器，输入：&lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; 即可访问&lt;/p&gt;

&lt;h3 id=&quot;jekyll-3&quot;&gt;使用Jekyll写博文&lt;/h3&gt;
&lt;p&gt;我们进入blog目录后，会发现Jekyl的结构如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;about&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;md&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scss&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xml&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_includes&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;footer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;svg&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;svg&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_layouts&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_posts&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;markdown&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_sass&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;├&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scss&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;└&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_syntax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highlighting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scss&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我们进入_post目录，撰写的markdown语法的博文都放在这里。默认会有一篇测试文章：2016-03-04-welcome-to-jekyll.markdown.
拷贝测试博文&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;markdown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后刷新一下浏览器、发现页面并没有变化.因为我们还没有通过Jekyll build去生成。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;默认情况下，服务会以前台的方式挂起，如果希望用后台进程运行服务，我们可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--detach&lt;/code&gt;参数，缩写参数为&lt;code class=&quot;highlighter-rouge&quot;&gt;-B&lt;/code&gt;(应该是Background的首字母)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detach&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;或者&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;值得注意的是：如果用vagrant虚拟机去安装jekyll，那么启动服务时还需要加上-H参数，指定访问主机号为0.0.0.0，即&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve build -B -H 0.0.0.0&lt;/code&gt;,否则vagrant下可能启动失败&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;再查看首页，发现已经有两篇文章了！因为没有更改标题，所以都是一样的。
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_D8F5893E-CBEB-4F56-A2A8-125929F64B3A.png&quot; /&gt;
好的，打开复制的 2016-03-04-test.markdown-test.markdown,可以看见开头有如下几个东东。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;layout: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;title:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Welcome to Jekyll!&quot;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;date:   &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0100&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;categories: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt;表示使用的是post布局，&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;是文章标题，&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;是自动生成的日期，&lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt;是该文章生成html文件后存放的目录，可以去_site/jekyll/update下找到对应日期下面的html文档。当然你也可以只设置jekyll单一的目录，甚至是更多级别的目录，用空格分开即可。头信息设置完成后就可以书写正文了。&lt;/p&gt;

&lt;p&gt;如果每次都输入这些头信息，还要去整理格式，那么一定很烦躁，这种重复性的东西我们就把它自动化，通过Rakefile去解决，它类似shell这样的脚本，可以使用交互模式。以下是我的Rakefile,可以复制后命名为Rakefile，放在站点根目录直接使用，也可以修改为适合自己的Rakefile：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;fileutils&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;创建新 post&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入要创建的 post URL：&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入 post 标题：&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入 post 子标题：&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@subtitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入 post 分类，以空格分隔：&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入 post 标签：&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@slug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@slug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@slug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%F&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@post_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_posts/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@date&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@slug&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.md&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exist?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;文件名已经存在！创建失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;touch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;---&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;layout: post&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;title: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;subtitle: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@subtitle&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;author: pizida&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;date: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;categories: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@categories&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tag: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@tag&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;---&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vi &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如何使用Rake，输入一下命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;rake会启动交互模式，让你依次输入title，subtitle，author，categories，tag等信息，并为你创建好具有头信息的markdown文件。如下一样:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;请输入要创建的 post URL：
testurl
请输入 post 标题：
testpost
请输入 post 子标题：
subtitle    
请输入 post 分类，以空格分隔：
jekyll
请输入 post 标签：
技术
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我们查看&lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt;目录，发现已经有一篇&lt;strong&gt;2016-03-05-testurl.md&lt;/strong&gt;文章，打开看下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;layout: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;title: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testpost&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;subtitle: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtitle&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;author: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pizida&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0800&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;categories: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;tag: &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;技术&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;已经为我们创建好头信息了。&lt;/p&gt;

&lt;p&gt;本地搭建jekyll和写博文大致就是如此，有更多疑问可到官网&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;https://jekyllrb.com/&lt;/a&gt;或中文镜像站&lt;a href=&quot;http://jekyllcn.com/&quot;&gt;http://jekyllcn.com/&lt;/a&gt;查阅资料。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;github-pages&quot;&gt;使用Github pages服务生成个人博客&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;创建我们的仓库&lt;/h3&gt;
&lt;p&gt;我们repository name设置为username.github.com(这里的username是指你在Github上的用户名，我的用户名是engine-go,后面的&lt;strong&gt;username&lt;/strong&gt;均指的是个人账户，不再做说明)，选择&lt;strong&gt;Public&lt;/strong&gt;仓库类型:
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_C4D37F64-A0AD-4EEB-88A8-36BCB6DED2EA.png&quot; alt=&quot;创建git仓库&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;github-pages-1&quot;&gt;为仓库创建Github Pages&lt;/h3&gt;
&lt;p&gt;创建仓库后，选择&lt;strong&gt;setting&lt;/strong&gt;
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_123.png&quot; alt=&quot;创建Github Pages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;strong&gt;Launch automatic page generator&lt;/strong&gt;
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_3F514A8A-3464-47B5-89AE-61FF6BC665B8.png&quot; alt=&quot;生成pages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后编辑下标题和描述，任意选择一个模板，点击&lt;strong&gt;Publish&lt;/strong&gt;
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如此，我们已经可以通过浏览器输入 http://username.github.io访问博客主页。那么我就访问engine-go.github.com。
如下图所示，就是你的博客首页。
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_FABD47CE-F2EC-4ECA-93C7-18517303F939.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;jekyllgithub&quot;&gt;将本地jekyll代码部署到Github上的仓库&lt;/h3&gt;
&lt;p&gt;前面我们已经详细地说明如何搭建Jekyll，我们可以在本地开发测试，推送代码到仓库，发布到线上。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;克隆仓库到本地&lt;/h3&gt;
&lt;p&gt;请确保本地安装了git客户端，克隆你的username.github.com仓库到本地。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此时你会看见当前存在username.github.com这个目录，我们启动jekyll服务（启动前确保其他目录下没有jekyll服务，可以&lt;code class=&quot;highlighter-rouge&quot;&gt;ps aux|grep jekyll&lt;/code&gt;查看进程,有的话,用&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 进程号&lt;/code&gt;杀掉）:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在我们打开&lt;a href=&quot;localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;,即可看见我们在Github上创建的主页，理论上和http://username.github.com  访问的应该是一模一样的。&lt;/p&gt;

&lt;h3 id=&quot;jekyll-4&quot;&gt;拷贝本地的jekyll目录到版本库&lt;/h3&gt;
&lt;p&gt;删除username.github.com下面的示例文件(README.md,不要删除，绑定域名会用到):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_site&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;json&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;stylesheets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;拷贝本地blog(这个是前面本地搭建的blog，后续等同，不再说明)下的所有目录及文件到username.github.com&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;重启服务，就可以在本地看见jekyll的站点页面了。&lt;/p&gt;

&lt;h3 id=&quot;jekyllgithub-pages&quot;&gt;本地Jekyll站点部署到Github Pages上（相当于线上环境）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;			   &lt;span class=&quot;c1&quot;&gt;#添加到暂存区	&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;提交jekyll默认页面&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#提交到本地仓库&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;    	   &lt;span class=&quot;c1&quot;&gt;#线上的站点是部署在master下面的&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;稍等10分钟左右，Github Pages有一定时间缓存,我们刷新username.github.io看看,已经ok了！
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_D9ADB28B-F0C7-4ADE-957C-90F9682956CF.png&quot; /&gt;
现在已经可以在本地blog下写文章，然后通过git推送到远程仓库，大家可以通过http://username.github.io/访问你的站点了&lt;/p&gt;

&lt;h3 id=&quot;usernamegithubio&quot;&gt;为username.github.io绑定个性域名&lt;/h3&gt;
&lt;p&gt;写博客的朋友一般都有自己的域名，请根据以下方法设置：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;我们要绑定的话需要在username.github.com目录下增加一个CNAME文件。
在里面添加你的域名，假设为example.com，然后推送CNAME文件到远程仓库:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CNAME&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;到域名服务商增加你的CNAME记录。
添加两条记录，@和www的主机记录，记录类型为CNAME类型，CNAME表示别名记录，该记录可以将多个名字映射到同一台计算机。
记录值请写&lt;strong&gt;username.github.io.&lt;/strong&gt;,值得注意的是&lt;code class=&quot;highlighter-rouge&quot;&gt;io&lt;/code&gt;后面还有一个圆点，切记。
&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/blog_E1A2BE7C-E031-4379-AC65-57A1570518CF.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过个几分钟，刷新博客，我的博客域名是pizida.com，就能直接访问了，不截图了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-3&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;本文介绍了Jekyll本地搭建过程和远程部署Jekyll的流程，我们梳理一下思路，以后可这样开发以及发布到线上：&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;本地开发：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve -B&lt;/code&gt;启动服务，使用Rakefile创建文章，然后用自己喜欢的工具进行写作。&lt;/li&gt;
  &lt;li&gt;创作完成，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;生成页面，本地localhost:4000查看文章。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-5&quot;&gt;发布线上&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;本地确认文章无误，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;等git命令推送文章到Github Pages服务器。&lt;/li&gt;
  &lt;li&gt;通过绑定的域名，查看线上文章，这个时候大家都能访问了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;有说得不对的地方，请多多指教。&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Mar 2016 07:48:51 +0800</pubDate>
        <link>http://xhuiinit.github.io//technology/2016/03/04/use-jekyll-create-blog-on-github/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//technology/2016/03/04/use-jekyll-create-blog-on-github/</guid>
        
        <category>jekyll</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Redis高并发产生超卖现象</title>
        <description>&lt;p&gt;最近在开发一个抢红包的活动时候，由于并发导致了超卖的问题，导致发放的红包过多&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;什么是超卖&lt;/h1&gt;

&lt;p&gt;首先，它不是股市那个超卖，炒股的朋友可以关闭这个页面了。
超卖就是卖出的商品超过了本来的库存。例如，你举办了一个秒杀活动，只要卖出1台iPhone 100S，但是现在有10个用户抢到了这个iPhone 100S。这个时候你需要卖出10台iPhone 100S。但你又没货，这就超卖了！&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;产生超卖的原因&lt;/h1&gt;

&lt;p&gt;系统发来了多个并发请求，同时判断当前限制是否超出库存（程序响应时间非常短），都判断出还有一个iPhone 100S，对每个用户都发送，最后超卖。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;超卖可能带来的后果&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;经济损失：无法给出10台 iPhone 100S，用户不满，告你欺诈，收到法院传票，赔偿受害者。&lt;/li&gt;
  &lt;li&gt;信任危机：用户这么难抢到100 台iPhone 100S，你说没有，他们感觉不会再爱。就比如你你买彩票，大奖号码和你的号码一模一样，后来，人家说，号码要错了。&lt;/li&gt;
  &lt;li&gt;关系紧张：同事关系紧张，领导对你的质疑。&lt;/li&gt;
  &lt;li&gt;上面三个其实都不重要，最最最最重要的是：年终奖的估值（严肃脸）&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-3&quot;&gt;真实案例抢红包&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;业务逻辑
    &lt;ul&gt;
      &lt;li&gt;全服务器一起抢红包，发放的红包不固定&lt;/li&gt;
      &lt;li&gt;每个小时发放的金币是固定的100万&lt;/li&gt;
      &lt;li&gt;每个整点前5分钟为开抢时间。（进一步加剧短时间内的高并发。。。）&lt;/li&gt;
      &lt;li&gt;每个用户只能抢一次&lt;/li&gt;
      &lt;li&gt;用户所获得的金币数是不固定的，需要经过一定业务逻辑然后随机金币。（这跟微信红包拼手气还不一样，因为拼手气红包本身已经确定是随机获取，既然逻辑固定，在用户没抢之前已经可以分配好金额入队，所以谁先谁后，完全没有关系。用户实际点击时，只需要判断用户是否获得过红包，没有的话即可发送预先安排好的红包，完全不会有并发情况，那就更没有所谓的超卖。）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-4&quot;&gt;实际结果&lt;/h1&gt;

&lt;p&gt;活动上线几个小时候，金币发放1500万，大大超过预期。查询DB数据，发现大量同一时间戳取得的结果（非微秒级别），证明产生了并发。看图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xqfiw.com1.z0.glb.clouddn.com/04140013_NzXS.jpg&quot; alt=&quot;并发原因&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;上图这种情况下，用户A获得了商品，用户B也获得了商品，这就是超卖现象。因为活动中用到了redis，redis本身是单线程的，出现超卖的原因是程序中抢红包的一系列操作应该是一个原子性的行为。每个用户都可以同时写入，redis本身并没有锁，需要自己去设计。好在redis提供了简单的事务控制。&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;高并发以及超卖现象的解决方案（纵向讨论，非分布式）&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;活动页面静态化，CDN处理技术&lt;/p&gt;

    &lt;p&gt;尽量展示使用CDN提供高速反应，选择离用户最近的节点，减少应用服务器压力&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过滤用户&lt;/p&gt;

    &lt;p&gt;这里可以根据自身的业务逻辑和使用场景去设计，因为最终只要100万金币发放，肯定会有用户都抢不到，所以我们可以让部分用户进入活动，展示“红包已经抢完”。可以是单双号限制，等级高低限制，是否充值限制等等。当然也可以计算大概多少人的金币发放达到了100万，然后在这里排队，只允许多少人进来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;乐观锁（乐观锁控制，对实时要求并产生超卖的主要解决手段）&lt;/p&gt;

    &lt;p&gt;超卖现象可以使用乐观锁或者悲观锁解决问题，但是悲观锁对于并发性能不友好。这里我们使用redis的乐观锁进行处理。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;乐观锁就是不相信数据会被修改，是一种更加宽松的锁机制。同一个数据所有请求都可以进行修改。每个请求都带一个版本号，如果操作结束和版本号不符，就禁止修改提交。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;redis提供了简单的事务处理机制，redis事务没有回滚功能，这必须手动实现；&lt;/p&gt;

&lt;p&gt;事务中的watch就是典型的乐观锁。Redis 通过&lt;a href=&quot;http://redisdoc.com/transaction/multi.html&quot;&gt;MULTI&lt;/a&gt;, &lt;a href=&quot;http://redisdoc.com/transaction/watch.html&quot;&gt;WATCH&lt;/a&gt;, &lt;a href=&quot;http://redisdoc.com/transaction/unwatch.html&quot;&gt;UNWATCH&lt;/a&gt; , &lt;a href=&quot;http://redisdoc.com/transaction/exec.html&quot;&gt;EXEC&lt;/a&gt;,&lt;a href=&quot;http://redisdoc.com/transaction/discard.html&quot;&gt;DISCARD&lt;/a&gt;四个命令来实现事务功能。&lt;/p&gt;

&lt;h1 id=&quot;section-6&quot;&gt;核心代码&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

 &lt;span class=&quot;vg&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;vg&quot;&gt;$total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;totalkey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;vg&quot;&gt;$can_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$can_num&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 

  &lt;span class=&quot;c1&quot;&gt;#监控发出去的红包总数  $redis-&amp;gt;watch(&quot;totalkey&quot;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;#事务的开始&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;#设置被监控的key，如果在multi和exec之间对watch的key进行修改，&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#那么exec将会返回nil&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;totalkey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;#提交事务。如果这时A和B都是限制范围内进来，A先监控了totalkey，然后提交。&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#那么B在这一步将会提交失败。因为总量已被修改&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;没有抢到红包哦，继续努力!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;count&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;vg&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mt_rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#在0到1000之间随机金币，逻辑自行丰富&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;抢红包成功！&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;count&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;预期：乐观锁控制后，金币已经控制在100万多一点。属于正常范围内&lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;总结&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;抢红包类活动（秒杀，1元购等等）当然可以通过&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;队列+延迟&lt;/code&gt;&lt;/strong&gt;处理方式去解决，这是最完美的解决方案，但是因为业务逻辑，必须将金币实时发给用，所以可以通过悲观锁或乐观锁去解决问题。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;watch是redis中乐观锁的典型应用，它结合multi，exec等操作，可以将一系列的redis命令打包，然后发送给服务器。但是记住一系列的命令中又一个命令操作失败，redis是不会回滚的，其他命令照样可以执行成功。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;关于watch需要记住的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 如果在事务块中所watch的key没有被当前请求修改或者被其他请求修改，exec都将返回失败；

2. 如果你watch了多个key，那么事务块中至少要有一个key被修改，否则exec也返回失败；
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 29 Jan 2015 20:00:00 +0800</pubDate>
        <link>http://xhuiinit.github.io//2015/01/29/high-concurrency-oversold/</link>
        <guid isPermaLink="true">http://xhuiinit.github.io//2015/01/29/high-concurrency-oversold/</guid>
        
        <category>redis</category>
        
        
      </item>
    
  </channel>
</rss>
